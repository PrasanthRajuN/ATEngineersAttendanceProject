@model ATEngineersAttendanceProject.Models.Admin.CombinedViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>AT Engineers Attendance</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        #poNo, /* Replace with actual ID or class of PO No input */
        #poCode, /* Replace with actual ID or class of PO Code input */
        #FinYear,
        #postalCopy { /* Replace with actual ID or class of Financial Year input */
            -webkit-appearance: none; /* Removes dropdown in WebKit browsers */
            -moz-appearance: none; /* Removes dropdown in Firefox */
            appearance: none; /* General for other browsers */
            background-image: none; /* Removes dropdown arrow image */
        }

        body {
            background-color: #F0F8FF;
            font-family: Arial, sans-serif;
        }

        .attendance-container {
            background-color: #FFFFFF;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: auto;
        }

        .form-container {
            background-color: #E7F3FF;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        .form-select, .input-field, .input-file {
            width: 100%;
            color: #333;
            border: 1px solid #0074B7;
            border-radius: 8px;
            padding: 10px;
            margin-top: 5px;
            transition: border-color 0.3s;
        }

        .form-select:focus, .input-field:focus {
            outline: none;
            border-color: #003B73;
            box-shadow: 0 0 5px rgba(0, 56, 112, 0.5);
        }

        .label {
            color: #003B73;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .allot-btn, .back-btn {
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 5px;
            width: 100%;
            font-size: 16px;
            font-weight: bold;
            transition: background-color 0.3s;
            text-decoration: none;
            display: inline-block;
            text-align: center;
        }

        .allot-btn {
            background-color: #4CAF50;
        }

        .allot-btn:hover {
            background-color: #45a049;
        }

        .back-btn {
            background-color: #007BFF;
            font-size: 14px;
            padding: 8px 16px;
            margin-bottom: 15px;
            width: auto;
        }

        #loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            z-index: 9999;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        /* Toast Positioning */
        .toast-container {
            position: fixed;
            top: 20px;
            right:5px;
            z-index: 1055;
        }

        .input-no-dropdown {
            appearance: none;
            -moz-appearance: none;
            -webkit-appearance: none;
        }

        .toast {
            min-width: 300px;
        }
    </style>
</head>
<body>
    <!-- Loading Overlay -->
    <div id="loading-overlay">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast-container">
        <div id="successToast" class="toast align-items-center text-bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    Work allotment successful!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="container mt-5">
        <div class="attendance-container">
            <div class=" d-flex justify-content-between align-items-center mb-3">
                <a href="@Url.Action("AdminPage", "Admin")" class="back-btn">Back</a>
            </div>
            <form method="post" action="@Url.Action("AllotWork", "Allotwork")" enctype="multipart/form-data">
                <div class="form-container">
                    <h3 class="text-center text-uppercase mb-4">Allot Work Page</h3>
                    <div class="mb-3">
                        <label for="section" class="label">Section</label>
                        <select name="section" class="form-select" id="section" required>
                            <option value="">Select</option>
                            @if (Model.Sections != null && Model.Sections.Any())
                            {
                                foreach (var sec in Model.Sections)
                                {
                                    <option>@sec.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="department" class="label">Department</label>
                        <select name="department" class="form-select" id="department" required>
                            <option value="">Select</option>
                            @if (Model.Departments != null && Model.Departments.Any())
                            {
                                foreach (var dep in Model.Departments)
                                {
                                    <option>@dep.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="district" class="label">District</label>
                        <select name="district" class="form-select" id="districtDropdown" onchange="loadMandals()" required>
                            <option value="">-- Select a District --</option>
                            @if (Model.Locations != null && Model.Locations.Any())
                            {
                                foreach (var loc in Model.Locations)
                                {
                                    <option>@loc.District</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="mandal" class="label">Mandal</label>
                        <select name="mandal" class="form-select" id="mandalDropdown" onchange="loadVillages()" required>
                            <option value="">-- Select a Mandal --</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="village" class="label">Village</label>
                        <select name="village" class="form-select" id="villageDropdown" onchange="loadLocations()" required>
                            <option value="">-- Select a Village --</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="location" class="label">Location</label>
                        <select name="location" class="form-select" id="locationDropdown" required>
                            <option value="">-- Select a Location --</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="atEngineerId" class="label">ATEngineers</label>
                        <select name="atEngineerId" class="form-select" id="atEngineerId" required>
                            <option value="">Select</option>
                            @if (Model.ATEngineer != null && Model.ATEngineer.Any())
                            {
                                foreach (var eng in Model.ATEngineer)
                                {
                                    <option value="@eng.Id">@eng.Id - @eng.Name</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="FinYear" class="label">Financial Year</label>
                        <input type="text" id="FinYear" class="form-select bg-light-blue input-field" readonly required />
                    </div>
                    <div  class="mb-3">
                        <label for="pono" class="label">PO No</label>
                        <input id="poNo" type="text" name="pono" class="form-select bg-light-blue input-field" required />
                    </div>
                    <div class="mb-3">
                        <label for="pocode" class="label">PO Code</label>
                        <input id="poCode" type="text" name="pocode" class="form-select bg-light-blue input-field" required />
                    </div>
                    <div class="mb-3">
                        <label for="podate" class="label">PO Date</label>
                        <input type="date" name="podate" class="form-select bg-light-blue input-field" required />
                    </div>
                    <div class="mb-3">
                        <label for="pocopy" class="label">PO Copy</label>
                        <input  type="file" name="pocopy" id="postalCopy" class="form-select bg-light-blue input-file" required />
                    </div>
                    <div class="mb-3">
                        <label for="alloted_date" class="label">Alloted Date</label>
                        <input type="date" id="AllotedDate" name="alloted_date" class="form-select bg-light-blue input-field" required />
                    </div>
                    <div class="text-center">
                        <button type="submit" class="allot-btn">Allot</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Your existing JavaScript code here


        let date = new Date();
        let year = date.getFullYear();
        document.getElementById("FinYear").value = year + " - " + (year + 1);

        let mm = String(date.getMonth() + 1).padStart(2, '0');
        let dd = String(date.getDate()).padStart(2, '0');
        let formattedDate = year + '-' + mm + '-' + dd;
        document.getElementById('AllotedDate').value = formattedDate;
        function loadMandals() {
            const district = document.getElementById("districtDropdown").value;

            if (district) {
                fetch(`/AllotWork/GetMandals?district=${encodeURIComponent(district)}`)
                    .then(response => response.json())
                    .then(data => {
                        const mandalDropdown = document.getElementById("mandalDropdown");
                        mandalDropdown.innerHTML = '<option value="">-- Select a Mandal --</option>';

                        data.forEach(mandal => {
                            const option = document.createElement("option");
                            option.value = mandal;
                            option.text = mandal;
                            mandalDropdown.add(option);
                        });
                    })
                    .catch(error => console.error("Error:", error));
            }
        }
        function loadVillages() {
            const mandal = document.getElementById("mandalDropdown").value;

            if (mandal) {
                fetch(`/AllotWork/GetVillages?mandal=${encodeURIComponent(mandal)}`)
                    .then(response => response.json())
                    .then(data => {
                        const villageDropdown = document.getElementById("villageDropdown");
                        villageDropdown.innerHTML = '<option value="">-- Select a Village --</option>';

                        data.forEach(village => {
                            const option = document.createElement("option");
                            option.value = village;
                            option.text = village;
                            villageDropdown.add(option);
                        });
                    })
                    .catch(error => console.error("Error:", error));
            }
        }
        function loadLocations() {
            const village = document.getElementById("villageDropdown").value;

            if (village) {
                fetch(`/AllotWork/GetLocations?village=${encodeURIComponent(village)}`)
                    .then(response => response.json())
                    .then(data => {
                        const locationDropdown = document.getElementById("locationDropdown");
                        locationDropdown.innerHTML = '<option value="">-- Select a Location --</option>';

                        data.forEach(location => {
                            const option = document.createElement("option");
                            option.value = location;
                            option.text = location;
                            locationDropdown.add(option);
                        });
                    })
                    .catch(error => console.error("Error:", error));
            }
        }
        window.addEventListener("load", function () {
            document.getElementById("loading-overlay").style.display = "none";
        });
        function showToast() {
            const toast = new bootstrap.Toast(document.getElementById("successToast"));
            toast.show();
            setTimeout(() => toast.hide(), 5000); // Hide after 5 seconds
        }

        // Check for success message on page load
        @if (ViewBag.SuccessMessage != null)
        {
            <text>showToast();</text>
        }
    </script>
</body>
</html>